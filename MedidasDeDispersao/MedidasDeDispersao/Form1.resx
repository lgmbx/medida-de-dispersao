<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAHudAAB7nQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAOgAAAN8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAOAAAAA6AAAAAAAA
        AAIAAAAAAAAAAAAAAAAAAAACAAAAAAAAACUAAAD3AAAAwwAAAFkAAABYAAAAXAAAAFwAAABcAAAAWwAA
        AFgAAABYAAAAWwAAAFwAAABcAAAAWwAAAFgAAABYAAAAWwAAAFwAAABcAAAAXAAAAFgAAABZAAAAwgAA
        APcAAAAlAAAAAAAAAAIAAAAAAAAAAAAAAAQAAAAAAAAAkwAAAOYAAAABAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAABAAAA5gAAAJMAAAAAAAAABAAAAAAAAAAAAAAAAwAAAAAAAAC3AAAAuQAAAAAAAAAJAAAAAAAA
        AFcAAAC/AAAAvwAAAFgAAAAAAAAAAAAAAFcAAAC/AAAAvwAAAFgAAAAAAAAAAAAAAFcAAAC/AAAAvwAA
        AFgAAAAAAAAACQAAAAAAAAC5AAAAtwAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAALkAAAC6AAAAAAAA
        AAAAAAAKAAAA6gAAAM4AAADOAAAA6wAAAAcAAAAHAAAA6wAAAM4AAADOAAAA6wAAAAcAAAAHAAAA6wAA
        AM4AAADOAAAA6gAAAAoAAAAAAAAAAAAAALoAAAC5AAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAuQAA
        ALoAAAAAAAAAAAAAAA8AAAD9AAAARgAAAEYAAAD/AAAACgAAAAoAAAD/AAAARgAAAEYAAAD/AAAACgAA
        AAoAAAD/AAAARgAAAEYAAAD9AAAADwAAAAAAAAAAAAAAugAAALkAAAAAAAAAAwAAAAAAAAAAAAAAAwAA
        AAAAAAC5AAAAuQAAAAAAAAADAAAAAgAAAM8AAAD/AAAA/wAAAM8AAAABAAAAAQAAAM8AAAD/AAAA/wAA
        AM8AAAABAAAAAQAAAM8AAAD/AAAA/wAAAM8AAAACAAAAAwAAAAAAAAC5AAAAuQAAAAAAAAADAAAAAAAA
        AAAAAAADAAAAAAAAALkAAAC5AAAAAAAAAAQAAAAAAAAAIAAAAF4AAABeAAAAHwAAAAAAAAAAAAAAIAAA
        AF4AAABeAAAAHwAAAAAAAAAAAAAAIAAAAF4AAABeAAAAHwAAAAAAAAAEAAAAAAAAALkAAAC5AAAAAAAA
        AAMAAAAAAAAAAAAAAAMAAAAAAAAAuQAAALkAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAMAAAAAAAAAuQAA
        ALkAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAC5AAAAuQAAAAAAAAAFAAAAAAAAAFYAAAC/AAAAvwAA
        AFYAAAAAAAAAAAAAAFYAAAC/AAAAvwAAAFYAAAAAAAAAAAAAAFYAAAC/AAAAvwAAAFYAAAAAAAAABQAA
        AAAAAAC5AAAAuQAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAALkAAAC5AAAAAAAAAAAAAAAKAAAA6gAA
        AM4AAADOAAAA6wAAAAcAAAAHAAAA6wAAAM4AAADOAAAA6wAAAAcAAAAHAAAA6wAAAM4AAADOAAAA6gAA
        AAoAAAAAAAAAAAAAALkAAAC5AAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAuQAAALkAAAAAAAAAAAAA
        AA8AAAD9AAAARgAAAEYAAAD/AAAACgAAAAoAAAD/AAAARgAAAEYAAAD/AAAACgAAAAoAAAD/AAAARgAA
        AEYAAAD9AAAADwAAAAAAAAAAAAAAuQAAALkAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAC5AAAAuQAA
        AAAAAAADAAAAAgAAAM8AAAD/AAAA/wAAAM8AAAABAAAAAQAAAM8AAAD/AAAA/wAAAM8AAAABAAAAAQAA
        AM8AAAD/AAAA/wAAAM8AAAACAAAAAwAAAAAAAAC5AAAAuQAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAA
        ALkAAAC5AAAAAAAAAAQAAAAAAAAAIAAAAF4AAABeAAAAHwAAAAAAAAAAAAAAIAAAAF4AAABeAAAAHwAA
        AAAAAAAAAAAAIAAAAF4AAABeAAAAHwAAAAAAAAAEAAAAAAAAALkAAAC5AAAAAAAAAAMAAAAAAAAAAAAA
        AAMAAAAAAAAAuQAAALkAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAMAAAAAAAAAuQAAALkAAAAAAAAAAwAA
        AAAAAAAAAAAAAwAAAAAAAAC5AAAAuQAAAAAAAAAFAAAAAAAAAFYAAAC/AAAAvwAAAFYAAAAAAAAAAAAA
        AFYAAAC/AAAAvwAAAFYAAAAAAAAAAAAAAFYAAAC/AAAAvwAAAFYAAAAAAAAABQAAAAAAAAC5AAAAuQAA
        AAAAAAADAAAAAAAAAAAAAAADAAAAAAAAALkAAAC5AAAAAAAAAAAAAAAKAAAA6gAAAM4AAADOAAAA6wAA
        AAcAAAAHAAAA6wAAAM4AAADOAAAA6wAAAAcAAAAHAAAA6wAAAM4AAADOAAAA6gAAAAoAAAAAAAAAAAAA
        ALkAAAC5AAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAuQAAALkAAAAAAAAAAAAAAA8AAAD9AAAARgAA
        AEYAAAD/AAAACgAAAAoAAAD/AAAARgAAAEYAAAD/AAAACgAAAAoAAAD/AAAARgAAAEYAAAD9AAAADwAA
        AAAAAAAAAAAAuAAAALgAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAC5AAAAuQAAAAAAAAADAAAAAgAA
        AM8AAAD/AAAA/wAAAM8AAAABAAAAAQAAANAAAAD/AAAA/wAAAM8AAAABAAAAAQAAANAAAAD/AAAA/wAA
        AM8AAAACAAAAAwAAAAAAAAC6AAAAugAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAALkAAAC6AAAAAAAA
        AAYAAAAAAAAAHwAAAF4AAABeAAAAHwAAAAAAAAAAAAAAHwAAAF4AAABeAAAAHwAAAAAAAAAAAAAAHwAA
        AF4AAABeAAAAHwAAAAAAAAAIAAAAAAAAAJ4AAACdAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAuQAA
        ALkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAAC5AAAAuwAAAAAAAAAoAAAArAAAALoAAAC9AAAAvQAAALsAAAC5AAAAuQAAALsAAAC9AAAAvQAA
        ALsAAAC5AAAAuQAAALsAAAC9AAAAvQAAALoAAACpAAAAtAAAALoAAAC4AAAAVwAAAAAAAAACAAAAAAAA
        AAAAAAADAAAAAAAAALkAAAC9AAAAAAAAAFoAAAD/AAAAuwAAALgAAAC6AAAAuQAAALkAAAC5AAAAuQAA
        ALkAAAC5AAAAuQAAALkAAAC5AAAAuQAAALoAAAC4AAAAvQAAAP4AAADTAAAArQAAAPkAAACuAAAAAAAA
        AAMAAAAAAAAAAAAAAAMAAAAAAAAAuQAAAL0AAAAAAAAAXAAAAPkAAAAOAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAOAAAA+QAAAFsAAAAAAAAAugAA
        ALcAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAC5AAAAvQAAAAAAAABdAAAA/QAAABEAAAAAAAAABQAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAAFAAAAAAAAABEAAAD9AAAAYAAA
        AAAAAAC+AAAAuQAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAALkAAAC9AAAAAAAAAF0AAAD9AAAAEQAA
        AAAAAAAFAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAUAAAAAAAAAEQAA
        AP0AAABdAAAAAAAAAL0AAAC5AAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAuQAAAL0AAAAAAAAAXAAA
        APkAAAAOAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAOAAAA+QAAAFwAAAAAAAAAvQAAALkAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAC5AAAAvgAA
        AAAAAABaAAAA/wAAALsAAAC4AAAAugAAALkAAAC5AAAAuQAAALkAAAC5AAAAuQAAALkAAAC5AAAAuQAA
        ALkAAAC6AAAAuAAAALsAAAD/AAAAWgAAAAAAAAC+AAAAuQAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAA
        ALcAAAC7AAAAAAAAACwAAACvAAAAvAAAAL0AAAC9AAAAvQAAAL0AAAC9AAAAvQAAAL0AAAC9AAAAvQAA
        AL0AAAC9AAAAvQAAAL0AAAC9AAAAvAAAAK8AAAAsAAAAAAAAALsAAAC3AAAAAAAAAAMAAAAAAAAAAAAA
        AAQAAAAAAAAAkwAAAOYAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAABAAAA5gAAAJMAAAAAAAAABAAA
        AAAAAAAAAAAAAgAAAAAAAAAlAAAA9wAAAMIAAABaAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAA
        AFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAWgAAAMIAAAD3AAAAJQAA
        AAAAAAACAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAA6AAAA4AAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA4AAA
        ADsAAAAAAAAAAgAAAAAAAAAAkAAACaAAAAUi//9EJQwwpCQAACQmAABkJAAAJCUMMKQkYYYkJQwwpCQA
        ACQmAABkJAAAJCUMMKQkYYYkJQwwpCQAACQmAABkJAAAJCUMMKQk//+lJAAABCQAAAQkX/okJEACJCRA
        AiQkX/okJAAAJCQAACQi//9EoAAABZAAAAk=
</value>
  </data>
</root>